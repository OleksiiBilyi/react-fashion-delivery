{"version":3,"file":"static/js/Cart.b5913357.chunk.js","mappings":"+QACA,EAAuB,mBAAvB,EAAsD,wBAAtD,EAA2F,yBAA3F,EAAuI,+BAAvI,EAAkL,wBAAlL,EAA4N,8BAA5N,EAA4Q,8BAA5Q,EAAiT,mBAAjT,EAA4U,oBAA5U,EAA6W,yBAA7W,EAAkZ,wBAAlZ,EAA0b,4BAA1b,EAAue,6BAAve,EAAihB,yB,UCsGjhB,EAtFuB,WACrB,IAAMA,GAAWC,EAAAA,EAAAA,KACXC,GAAQC,EAAAA,EAAAA,GAAeC,EAAAA,IACvBC,GAAaF,EAAAA,EAAAA,GAAeG,EAAAA,IAE5BC,GAAuBC,EAAAA,EAAAA,QAAuB,MAEpDC,GACEC,EAAAA,EAAAA,WAAkB,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GADnBI,EAAqBF,EAAA,GAAEG,EAAuBH,EAAA,GAG/CI,GAAcC,EAAAA,EAAAA,cAAY,WAC9BF,GAAwB,EAC1B,GAAG,IAEGG,GAAWD,EAAAA,EAAAA,cAAY,WAC3BF,GAAwB,EAC1B,GAAG,IAEGI,GAAqBF,EAAAA,EAAAA,cAAY,WACrChB,GAASmB,EAAAA,EAAAA,OACTL,GAAwB,EAC1B,GAAG,CAACd,IAEEoB,GACJC,EAAAA,EAAAA,KAACC,EAAAA,EAAa,CACZC,GAAIV,EACJW,WAAY,CACVC,MAAOC,EACPC,YAAaD,EACbE,KAAMF,EACNG,WAAYH,GAEdI,QAAS,IACTC,eAAa,EAAAC,UAEbX,EAAAA,EAAAA,KAACY,EAAAA,GAAiB,CAChBC,IAAK3B,EACL4B,MAAM,uCACNlB,SAAUA,EACVmB,UAAWlB,MAKXmB,EAA0BnC,EAAMoC,QACpCC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAR,SAAA,EACEO,EAAAA,EAAAA,MAAA,UAAQE,QAAS1B,EAAa2B,UAAWhB,EAAkBM,SAAA,CAAC,UACpDX,EAAAA,EAAAA,KAACsB,EAAAA,GAAU,QAEnBtB,EAAAA,EAAAA,KAAA,MAAIqB,UAAWhB,EAAOM,SACnB9B,EAAM0C,KAAI,SAACC,GAAG,OACbxB,EAAAA,EAAAA,KAACyB,EAAAA,IAAQC,EAAAA,EAAAA,GAAA,GAAkBF,GAAZA,EAAIG,GAAe,OAGtCT,EAAAA,EAAAA,MAAA,OAAKG,UAAWhB,EAAQM,SAAA,EACtBX,EAAAA,EAAAA,KAAA,MAAIqB,UAAWhB,EAAaM,SAAC,WAC7BX,EAAAA,EAAAA,KAAA,MAAIqB,UAAWhB,EAAYM,SACxB9B,EAAM0C,KAAI,SAACC,GAAG,OACbN,EAAAA,EAAAA,MAAA,MAAiBG,UAAWhB,EAAgBM,SAAA,EAC1CX,EAAAA,EAAAA,KAAA,MAAIqB,UAAWhB,EAAiBM,SAAEa,EAAIV,SACtCd,EAAAA,EAAAA,KAAA,QAAAW,SAAOa,EAAII,SACXV,EAAAA,EAAAA,MAAA,QAAAP,SAAA,CAAOa,EAAIK,MAAM,QACjBX,EAAAA,EAAAA,MAAA,QAAAP,SAAA,CAAM,IAAEa,EAAIM,WAJLN,EAAIG,GAKR,OAGTT,EAAAA,EAAAA,MAAA,OAAKG,UAAWhB,EAAaM,SAAA,CAAC,iBACfO,EAAAA,EAAAA,MAAA,KAAAP,SAAA,CAAI3B,EAAW,aAG/Be,MAGHC,EAAAA,EAAAA,KAAC+B,EAAAA,GAAS,IAGZ,OACE/B,EAAAA,EAAAA,KAAA,OAAKqB,UAAWhB,EAAOM,UACrBO,EAAAA,EAAAA,MAAA,OAAKG,UAAS,GAAAW,OAAK3B,EAAW,cAAaM,SAAA,EACzCX,EAAAA,EAAAA,KAACiC,EAAAA,GAAY,CAACC,MAAM,SACnBlB,MAIT,C","sources":["webpack://react-fashion-delivery/./src/pages/Cart/Cart.module.scss?bc23","pages/Cart/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"page\":\"Cart_page__1FDZD\",\"container\":\"Cart_container__kGNYk\",\"modalEnter\":\"Cart_modalEnter__BXU13\",\"modalEnterActive\":\"Cart_modalEnterActive__XmnJF\",\"modalExit\":\"Cart_modalExit__J6vrL\",\"modalExitActive\":\"Cart_modalExitActive__3dnIv\",\"clearCartButton\":\"Cart_clearCartButton__TaFJn\",\"list\":\"Cart_list__oYkb4\",\"total\":\"Cart_total__VcEkV\",\"blockTitle\":\"Cart_blockTitle__jarPH\",\"totalList\":\"Cart_totalList__Fb4p8\",\"totalListItem\":\"Cart_totalListItem__YXWlr\",\"totalItemTitle\":\"Cart_totalItemTitle__281NS\",\"totalPrice\":\"Cart_totalPrice__H49H4\"};","import React, { useCallback, useRef, useState } from \"react\";\r\nimport CSSTransition from \"react-transition-group/CSSTransition\";\r\n\r\nimport { useAppDispatch, useAppSelector } from \"../../hooks\";\r\nimport { selectCartItems, selectTotalPrice } from \"../../redux/cart/selectors\";\r\nimport { clearCart } from \"../../redux/cart/slice\";\r\n\r\nimport {\r\n  CartItem,\r\n  SectionTitle,\r\n  EmptyCart,\r\n  ConfirmationModal,\r\n} from \"../../components\";\r\nimport { DeleteIcon } from \"../../components/ui/Icons\";\r\n\r\nimport s from \"./Cart.module.scss\";\r\n\r\nconst Cart: React.FC = () => {\r\n  const dispatch = useAppDispatch();\r\n  const items = useAppSelector(selectCartItems);\r\n  const totalPrice = useAppSelector(selectTotalPrice);\r\n\r\n  const confirmationModalRef = useRef<HTMLDivElement>(null);\r\n\r\n  const [showConfirmationModal, setShowConfimationModal] =\r\n    useState<boolean>(false);\r\n\r\n  const onClearCart = useCallback(() => {\r\n    setShowConfimationModal(true);\r\n  }, []);\r\n\r\n  const onCancel = useCallback(() => {\r\n    setShowConfimationModal(false);\r\n  }, []);\r\n\r\n  const onConfirmClearCart = useCallback(() => {\r\n    dispatch(clearCart());\r\n    setShowConfimationModal(false);\r\n  }, [dispatch]);\r\n\r\n  const confirmationModalJSX: JSX.Element = (\r\n    <CSSTransition\r\n      in={showConfirmationModal}\r\n      classNames={{\r\n        enter: s.modalEnter,\r\n        enterActive: s.modalEnterActive,\r\n        exit: s.modalExit,\r\n        exitActive: s.modalExitActive,\r\n      }}\r\n      timeout={200}\r\n      unmountOnExit\r\n    >\r\n      <ConfirmationModal\r\n        ref={confirmationModalRef}\r\n        title=\"ARE YOU SURE YOU WANT TO CLEAR CART?\"\r\n        onCancel={onCancel}\r\n        onConfirm={onConfirmClearCart}\r\n      />\r\n    </CSSTransition>\r\n  );\r\n\r\n  const contentJSX: JSX.Element = items.length ? (\r\n    <>\r\n      <button onClick={onClearCart} className={s.clearCartButton}>\r\n        Clear <DeleteIcon />\r\n      </button>\r\n      <ul className={s.list}>\r\n        {items.map((obj) => (\r\n          <CartItem key={obj.id} {...obj} />\r\n        ))}\r\n      </ul>\r\n      <div className={s.total}>\r\n        <h2 className={s.blockTitle}>TOTAL</h2>\r\n        <ul className={s.totalList}>\r\n          {items.map((obj) => (\r\n            <li key={obj.id} className={s.totalListItem}>\r\n              <h5 className={s.totalItemTitle}>{obj.title}</h5>\r\n              <span>{obj.brand}</span>\r\n              <span>{obj.price}$</span>\r\n              <span>x{obj.count}</span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <div className={s.totalPrice}>\r\n          Total Price: <b>{totalPrice}$</b>\r\n        </div>\r\n      </div>\r\n      {confirmationModalJSX}\r\n    </>\r\n  ) : (\r\n    <EmptyCart />\r\n  );\r\n\r\n  return (\r\n    <div className={s.page}>\r\n      <div className={`${s.container} container`}>\r\n        <SectionTitle value=\"CART\" />\r\n        {contentJSX}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n"],"names":["dispatch","useAppDispatch","items","useAppSelector","selectCartItems","totalPrice","selectTotalPrice","confirmationModalRef","useRef","_useState","useState","_useState2","_slicedToArray","showConfirmationModal","setShowConfimationModal","onClearCart","useCallback","onCancel","onConfirmClearCart","clearCart","confirmationModalJSX","_jsx","CSSTransition","in","classNames","enter","s","enterActive","exit","exitActive","timeout","unmountOnExit","children","ConfirmationModal","ref","title","onConfirm","contentJSX","length","_jsxs","_Fragment","onClick","className","DeleteIcon","map","obj","CartItem","_objectSpread","id","brand","price","count","EmptyCart","concat","SectionTitle","value"],"sourceRoot":""}